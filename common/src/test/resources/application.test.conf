archway {
  featureFlags =  "foo"
  templates {
    templateRoot = ${PWD}/templates/src/main/ssp/default
    topicGenerator = "io.phdata.generators.DefaultTopicGenerator"
    applicationGenerator = "io.phdata.generators.DefaultApplicationGenerator"
    ldapGroupGenerator = "io.phdata.generators.DefaultLDAPGroupGenerator"
  }

  rest {
    principal = "benny@JOTUNN.IO"
    httpPrincipal = ""
    authType = "spnego"
    keytab = "/heimdali.keytab"
    authType = "ldap"
    port = 8080
    secret = "abc"
    sslStore = "/"
    sslStorePassword = "abc"
    sslKeyManagerPassword = "/"
  }

  ui {
    url = "http://master1.jotunn.io:8181"
    staticContentDir = "/opt/cloudera/parcels/ARCHWAY/usr/lib/heimdali-ui/"
  }

  smtp {
    fromEmail = "test@email.com"
    host = "master1.jotunn.io"
    port = 123
    ssl = false
    auth = false
    smtps = false
  }

  cluster {
    url = ""
    name = "cluster"
    nameservice = "cluster"
    sessionRefresh = 1h
    environment = "dev"
    beeswaxPort = 21000
    hiveServer2Port = 21050
    hueOverride {
      port = 8088
    }
    admin {
      username = "admin"
      password = "admin"
    }
  }

  approvers {
    notificationEmail = "test@email.com, test2@email.com"
    infrastructure = "cn=admins,dc=jotunn,dc=io"
    risk = "cn=admins,dc=jotunn,dc=io"
  }

  workspaces {
    user {
      defaultSize = 250
      defaultCores = 1
      defaultMemory = 1
      poolParents = root.user
    }

    sharedWorkspace {
      defaultSize = 250
      defaultCores = 4
      defaultMemory = 16
      poolParents = root
    }

    dataset {
      defaultSize = 1
      defaultCores = 1
      defaultMemory = 1
      poolParents = root
    }
  }

  db {
    meta {
      driver = "org.postgresql.Driver"
      url = "jdbc:postgresql://localhost:5432/archway"
      username = "postgres"
      password = "postgres"
    }
    hive {
      driver = "org.apache.hive.jdbc.HiveDriver"
      url = "jdbc:hive2://master1.jotunn.io:10000/default;principal=hive/_HOST@JOTUNN.IO"
    }
    impala {
      driver = "com.cloudera.impala.jdbc41.Driver"
      url = "jdbc:impala://worker1.valhalla.phdata.io:21050/default;SSL=1;AuthMech=1;AllowSelfSignedCerts=1;SSLTrustStorePwd=changeit;SSLTrustStore="${PWD}"/jssecacerts-java-1.8.jks;SSLKeyStore="${PWD}"/jssecacerts-java-1.8.jks;SSLKeyStorePwd=changeit;KrbHostFQDN=worker1.valhalla.phdata.io;KrbServiceName=impala;KrbAuthType=1"
    }
  }

  ldap {
    provisioningBinding {
      server = ad1.jotunn.io
      server = ${?OPENLDAP_HOST}
      port = 636
      bindDN = "CN=Administrator,CN=Users,DC=jotunn,DC=io"
      bindPassword = "Jotunn123!"
    }
    lookupBinding {
      server = ad1.jotunn.io
      server = ${?OPENLDAP_HOST}
      port = 636
      bindDN = "CN=Administrator,CN=Users,DC=jotunn,DC=io"
      bindPassword = "Jotunn123!"
    }
    baseDN = "dc=jotunn,dc=io"
    userPath = "cn=Users,dc=jotunn,dc=io"
    groupPath = "ou=heimdali,dc=jotunn,dc=io"
    realm = "JOTUNN.IO"
    syncInterval = 1 hour
    authorizationDN = ""
    filterTemplate = "(&(sAMAccountName={{ filter }}*)(|(objectClass=user)(objectClass=group)))"
    memberDisplayTemplate = "{{ name }} ({{ sAMAccountName }})"
  }

  kafka {
    zookeeperConnect = "master1.jotunn.io:2181"
    secureTopics = false
  }

  provisioning {
    threadPoolSize = 5
    provisionInterval = 15 minutes
  }

}
