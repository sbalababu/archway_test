-- MySQL Script generated by MySQL Workbench
-- Sun 05 Aug 2018 07:54:40 PM CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

/* SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0; */
/* SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0; */
/* SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES'; */

-- -----------------------------------------------------
-- Schema heimdali
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `ldap_registration`
-- -----------------------------------------------------
CREATE SEQUENCE ldap_registration_seq;

CREATE TABLE IF NOT EXISTS ldap_registration (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('ldap_registration_seq'),
  distinguished_name VARCHAR(255) NOT NULL,
  common_name VARCHAR(255) NOT NULL,
  existing CHAR(1) NOT NULL DEFAULT '0',
  sentry_role VARCHAR(255) NOT NULL,
  group_created TIMESTAMP NULL,
  role_created TIMESTAMP NULL,
  group_associated TIMESTAMP NULL,
  PRIMARY KEY (id));


-- -----------------------------------------------------
-- Table `hive_grant`
-- -----------------------------------------------------
CREATE SEQUENCE hive_grant_seq;

CREATE TABLE IF NOT EXISTS hive_grant (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('hive_grant_seq'),
  ldap_registration_id BIGINT NOT NULL,
  location_access TIMESTAMP NULL,
  database_access TIMESTAMP NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_hive_grant_ldap_registration1
    FOREIGN KEY (ldap_registration_id)
    REFERENCES ldap_registration (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_hive_grant_ldap_registration1_idx ON hive_grant (ldap_registration_id);


-- -----------------------------------------------------
-- Table `hive_database`
-- -----------------------------------------------------
CREATE SEQUENCE hive_database_seq;

CREATE TABLE IF NOT EXISTS hive_database (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('hive_database_seq'),
  name VARCHAR(255) NOT NULL,
  location VARCHAR(255) NOT NULL,
  size_in_gb INT NOT NULL,
  directory_created TIMESTAMP NULL,
  quota_set TIMESTAMP NULL,
  database_created TIMESTAMP NULL,
  manager_group_id BIGINT NOT NULL,
  readonly_group_id BIGINT NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_hive_database_hive_grant1
    FOREIGN KEY (manager_group_id)
    REFERENCES hive_grant (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_hive_database_hive_grant2
    FOREIGN KEY (readonly_group_id)
    REFERENCES hive_grant (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX fk_hive_database_hive_grant1_idx ON hive_database (manager_group_id);
CREATE INDEX fk_hive_database_hive_grant2_idx ON hive_database (readonly_group_id);


-- -----------------------------------------------------
-- Table `resource_pool`
-- -----------------------------------------------------
CREATE SEQUENCE resource_pool_seq;

CREATE TABLE IF NOT EXISTS resource_pool (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('resource_pool_seq'),
  pool_name VARCHAR(255) NOT NULL,
  max_cores INT NOT NULL,
  max_memory_in_gb INT NOT NULL,
  created TIMESTAMP NULL,
  PRIMARY KEY (id));


-- -----------------------------------------------------
-- Table `compliance`
-- -----------------------------------------------------
CREATE SEQUENCE compliance_seq;

CREATE TABLE IF NOT EXISTS compliance (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('compliance_seq'),
  phi_data CHAR(1) NOT NULL,
  pii_data CHAR(1) NOT NULL,
  pci_data CHAR(1) NOT NULL,
  PRIMARY KEY (id));


-- -----------------------------------------------------
-- Table `workspace_request`
-- -----------------------------------------------------
CREATE SEQUENCE workspace_request_seq;

CREATE TABLE IF NOT EXISTS workspace_request (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('workspace_request_seq'),
  name VARCHAR(255) NOT NULL,
  compliance_id BIGINT NOT NULL,
  requested_by VARCHAR(255) NOT NULL,
  request_date TIMESTAMP NOT NULL,
  single_user CHAR(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_workspace_request_compliance1
    FOREIGN KEY (compliance_id)
    REFERENCES compliance (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_workspace_request_compliance1_idx ON workspace_request (compliance_id);


-- -----------------------------------------------------
-- Table `approval`
-- -----------------------------------------------------
CREATE SEQUENCE approval_seq;

CREATE TABLE IF NOT EXISTS approval (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('approval_seq'),
  role varchar(25) NOT NULL,
  approver VARCHAR(255) NOT NULL,
  approval_time TIMESTAMP NOT NULL,
  workspace_request_id BIGINT NOT NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_approval_workspace_request1
    FOREIGN KEY (workspace_request_id)
    REFERENCES workspace_request (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_approval_workspace_request1_idx ON approval (workspace_request_id);


-- -----------------------------------------------------
-- Table `member`
-- -----------------------------------------------------
CREATE SEQUENCE member_seq;

CREATE TABLE IF NOT EXISTS member (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('member_seq'),
  distinguished_name VARCHAR(255) NOT NULL,
  ldap_registration_id BIGINT NOT NULL,
  created TIMESTAMP NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_member_ldap_registration1
    FOREIGN KEY (ldap_registration_id)
    REFERENCES ldap_registration (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_member_ldap_registration1_idx ON member (ldap_registration_id);


-- -----------------------------------------------------
-- Table `provision_task`
-- -----------------------------------------------------
CREATE SEQUENCE provision_task_seq;

CREATE TABLE IF NOT EXISTS provision_task (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('provision_task_seq'),
  name VARCHAR(255) NOT NULL,
  completed TIMESTAMP NULL,
  PRIMARY KEY (id))
;


-- -----------------------------------------------------
-- Table `task_log`
-- -----------------------------------------------------
CREATE SEQUENCE task_log_seq;

CREATE TABLE IF NOT EXISTS task_log (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('task_log_seq'),
  message VARCHAR(255) NOT NULL,
  provision_task_id BIGINT NOT NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_table1_provision_task1
    FOREIGN KEY (provision_task_id)
    REFERENCES provision_task (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_table1_provision_task1_idx ON task_log (provision_task_id);


-- -----------------------------------------------------
-- Table `topic_grant`
-- -----------------------------------------------------
CREATE SEQUENCE topic_grant_seq;

CREATE TABLE IF NOT EXISTS topic_grant (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('topic_grant_seq'),
  ldap_registration_id BIGINT NOT NULL,
  topic_access TIMESTAMP NULL,
  actions VARCHAR(255) NOT NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_topic_role_ldap_registration1
    FOREIGN KEY (ldap_registration_id)
    REFERENCES ldap_registration (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_topic_role_ldap_registration1_idx ON topic_grant (ldap_registration_id);


-- -----------------------------------------------------
-- Table `kafka_topic`
-- -----------------------------------------------------
CREATE SEQUENCE kafka_topic_seq;

CREATE TABLE IF NOT EXISTS kafka_topic (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('kafka_topic_seq'),
  name VARCHAR(255) NOT NULL,
  partitions INT NULL,
  replication_factor INT NULL,
  manager_role_id BIGINT NOT NULL,
  readonly_role_id BIGINT NOT NULL,
  topic_created TIMESTAMP NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_kafka_topic_topic_role1
    FOREIGN KEY (manager_role_id)
    REFERENCES topic_grant (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_kafka_topic_topic_role2
    FOREIGN KEY (readonly_role_id)
    REFERENCES topic_grant (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_kafka_topic_topic_role1_idx ON kafka_topic (manager_role_id);
CREATE INDEX fk_kafka_topic_topic_role2_idx ON kafka_topic (readonly_role_id);


-- -----------------------------------------------------
-- Table `application`
-- -----------------------------------------------------
CREATE SEQUENCE application_seq;

CREATE TABLE IF NOT EXISTS application (
  id BIGINT NOT NULL DEFAULT NEXTVAL ('application_seq'),
  name VARCHAR(45) NOT NULL,
  consumer_group_name VARCHAR(255) NOT NULL,
  ldap_registration_id BIGINT NOT NULL,
  consumer_group_access TIMESTAMP NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_application_ldap_registration1
    FOREIGN KEY (ldap_registration_id)
    REFERENCES ldap_registration (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_application_ldap_registration1_idx ON application (ldap_registration_id);


-- -----------------------------------------------------
-- Table `workspace_topic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS workspace_topic (
  workspace_request_id BIGINT NOT NULL,
  kafka_topic_id BIGINT NOT NULL,
  PRIMARY KEY (workspace_request_id, kafka_topic_id)
 ,
  CONSTRAINT fk_workspace_request_has_kafka_topic_workspace_request1
    FOREIGN KEY (workspace_request_id)
    REFERENCES workspace_request (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_workspace_request_has_kafka_topic_kafka_topic1
    FOREIGN KEY (kafka_topic_id)
    REFERENCES kafka_topic (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_workspace_request_has_kafka_topic_kafka_topic1_idx ON workspace_topic (kafka_topic_id);
CREATE INDEX fk_workspace_request_has_kafka_topic_workspace_request1_idx ON workspace_topic (workspace_request_id);


-- -----------------------------------------------------
-- Table `workspace_database`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS workspace_database (
  workspace_request_id BIGINT NOT NULL,
  hive_database_id BIGINT NOT NULL,
  PRIMARY KEY (workspace_request_id, hive_database_id)
 ,
  CONSTRAINT fk_workspace_request_has_hive_database_workspace_request1
    FOREIGN KEY (workspace_request_id)
    REFERENCES workspace_request (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_workspace_request_has_hive_database_hive_database1
    FOREIGN KEY (hive_database_id)
    REFERENCES hive_database (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_workspace_request_has_hive_database_hive_database1_idx ON workspace_database (hive_database_id);
CREATE INDEX fk_workspace_request_has_hive_database_workspace_request1_idx ON workspace_database (workspace_request_id);


-- -----------------------------------------------------
-- Table `workspace_pool`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS workspace_pool (
  workspace_request_id BIGINT NOT NULL,
  resource_pool_id BIGINT NOT NULL,
  PRIMARY KEY (workspace_request_id, resource_pool_id)
 ,
  CONSTRAINT fk_workspace_request_has_resource_pool_workspace_request1
    FOREIGN KEY (workspace_request_id)
    REFERENCES workspace_request (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_workspace_request_has_resource_pool_resource_pool1
    FOREIGN KEY (resource_pool_id)
    REFERENCES resource_pool (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_workspace_request_has_resource_pool_resource_pool1_idx ON workspace_pool (resource_pool_id);
CREATE INDEX fk_workspace_request_has_resource_pool_workspace_request1_idx ON workspace_pool (workspace_request_id);


-- -----------------------------------------------------
-- Table `workspace_application`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS workspace_application (
  application_id BIGINT NOT NULL,
  workspace_request_id BIGINT NOT NULL,
  PRIMARY KEY (application_id, workspace_request_id)
 ,
  CONSTRAINT fk_application_has_workspace_request_application1
    FOREIGN KEY (application_id)
    REFERENCES application (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_application_has_workspace_request_workspace_request1
    FOREIGN KEY (workspace_request_id)
    REFERENCES workspace_request (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_application_has_workspace_request_workspace_request1_idx ON workspace_application (workspace_request_id);
CREATE INDEX fk_application_has_workspace_request_application1_idx ON workspace_application (application_id);


/* SET SQL_MODE=@OLD_SQL_MODE; */
/* SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS; */
/* SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS; */
